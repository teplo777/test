
const playBtn = document.getElementById('play-button');
const audio = document.getElementById('bg-music');
const playShape = document.querySelector('.play-shape');
const pauseShape = document.querySelector('.pause-shape');

playBtn.addEventListener('click', function() {
  if (audio.paused) {
    audio.play();
    playShape.style.display = 'none';
    pauseShape.style.display = 'block';
    this.setAttribute('aria-label', '–ü–∞—É–∑–∞');
  } else {
    audio.pause();
    playShape.style.display = 'block';
    pauseShape.style.display = 'none';
    this.setAttribute('aria-label', '–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏');
  }
});

  document.addEventListener('DOMContentLoaded', function() {
    const programSection = document.querySelector('.program');
    
    function checkVisibility() {
      const sectionPosition = programSection.getBoundingClientRect();
      const screenPosition = window.innerHeight / 1.2;
      
      if(sectionPosition.top < screenPosition) {
        programSection.classList.add('visible');
        window.removeEventListener('scroll', checkVisibility);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkVisibility();
    
    // –ò –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    window.addEventListener('scroll', checkVisibility);
  });


  document.addEventListener('DOMContentLoaded', () => {
    const colorBlock = document.querySelector('.dress-code__color');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
        }
      });
    }, { threshold: 0.3 }); // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ 30% —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    
    if (colorBlock) {
      observer.observe(colorBlock);
    }
  });





  document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ "–î—Ä—É–≥–æ–µ" –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤
    document.getElementById('other-drink').addEventListener('change', function() {
      const otherDrinkText = document.getElementById('otherDrinkText');
      otherDrinkText.style.display = this.checked ? 'block' : 'none';
      if (!this.checked) otherDrinkText.value = '';
    });
  
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    document.getElementById('telegramForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
      const phoneInput = document.getElementById('phone');
      const phoneError = document.getElementById('phoneError');
      const phoneNumber = phoneInput.value.replace(/\D/g, '');
      
      if (phoneNumber.length < 10) {
        phoneError.style.display = 'block';
        return;
      } else {
        phoneError.style.display = 'none';
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
      const presenceChoice = document.querySelector('input[name="presence"]:checked');
      if (!presenceChoice) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, —Å–º–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!");
        return;
      }
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
      const firstName = document.getElementById('firstName').value;
      const phone = phoneInput.value;
      const presence = presenceChoice.value;
      const allergy = document.getElementById('allergy').value; // –ù–æ–≤–æ–µ –ø–æ–ª–µ: –∞–ª–ª–µ—Ä–≥–∏—è
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –Ω–∞–ø–∏—Ç–∫–æ–≤ (–≤–∫–ª—é—á–∞—è —Å–≤–æ–±–æ–¥–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
      const drinkPreferences = [];
      document.querySelectorAll('input[name="drinkPreferences"]:checked').forEach(checkbox => {
        if (checkbox.id === 'other-drink' && checkbox.checked) {
          const otherDrinkText = document.getElementById('otherDrinkText').value;
          if (otherDrinkText.trim() !== '') {
            drinkPreferences.push(`–î—Ä—É–≥–æ–µ: ${otherDrinkText}`);
          }
        } else {
          drinkPreferences.push(checkbox.value);
        }
      });
  
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ (–æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ç–æ–∫–µ–Ω –∏ chat_id)
      const botToken = '7850603844:AAH8tgjqf0fq82bRh7zYJJUkHagDx2RvPJU';
      const privateChatId = '1007887235'; // –í–∞—à –ª–∏—á–Ω—ã–π —á–∞—Ç
      const groupChatId = '-4701792735'; // ID –≥—Ä—É–ø–ø—ã
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
      const message = `
        –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:
        üë§ –§–ò–û: ${firstName}
        üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
        üéâ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ: ${presence}
        üç∑ –ù–∞–ø–∏—Ç–∫–∏: ${drinkPreferences.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
        ‚ö†Ô∏è –ê–ª–ª–µ—Ä–≥–∏—è: ${allergy || '–ù–µ—Ç –∞–ª–ª–µ—Ä–≥–∏–∏'}
      `;
      
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
      const sendToChat = (chatId) => {
        return fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            chat_id: chatId,
            text: message,
          }),
        });
      };
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ–±–∞ —á–∞—Ç–∞
      Promise.all([
        sendToChat(privateChatId),
        sendToChat(groupChatId)
      ])
      .then(responses => Promise.all(responses.map(r => r.json())))
      .then(data => {
        alert('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
        document.getElementById('telegramForm').reset();
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ "–î—Ä—É–≥–æ–µ" –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã
        document.getElementById('otherDrinkText').style.display = 'none';
      })
      .catch((error) => {
        console.error('Error:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
      });
    });
  });







// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—Å—á–µ—Ç–∞
const countDownDate = new Date("Jun 27, 2025 00:00:00").getTime();

// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
const x = setInterval(function() {

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    const now = new Date().getTime();
    
    // –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –∏ –∫–æ–Ω–µ—á–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
    const distance = countDownDate - now;
    
    // –†–∞—Å—á–µ—Ç –¥–Ω–µ–π, —á–∞—Å–æ–≤, –º–∏–Ω—É—Ç, —Å–µ–∫—É–Ω–¥
    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((distance % (1000 * 60)) / 1000);
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    document.getElementById("days").innerHTML = days;
    document.getElementById("hours").innerHTML = hours;
    document.getElementById("minutes").innerHTML = minutes;
    document.getElementById("seconds").innerHTML = seconds;
    
    // –ï—Å–ª–∏ –æ—Ç—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω
    if (distance < 0) {
        clearInterval(x);
        document.getElementById("countdown").innerHTML = "–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!";
    }
}, 1000);